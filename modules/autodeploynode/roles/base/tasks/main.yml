---
# The base role will do the initial preparation of the Autodeploynode.

- name: Install required support packages
  yum:
    pkg: "{{ item }}"
    state: present
  with_items: "{{ autodeploy_support_pkgs }}"

- name: Install required pip-based support packages
  pip:
    requirements: "{{ item }}"
    state: present
    extra_args: "--upgrade"
  with_fileglob: "*pip-requirements*"

- name: Create the resource sub-directories
  file:
    path: "{{ resources_base_path }}/{{ item }}"
    state: directory
  with_items: "{{ resource_dirs }}"

- name: Create the inventory directories
  file:
    path: "{{ projects_base_path }}/{{ item }}"
    state: directory
  with_items:
    - inventory
    - inventory/host_vars
    - inventory/group_vars

- name: Create the .ssh directory
  file:
    path: /root/.ssh/
    state: directory

- name: Create SSH Key Pair for root user
  user:
    name: root
    generate_ssh_key: yes

- name: Copy the .ssh/config file
  copy:
    src: config
    dest: /root/.ssh/config
    mode: 0600

- name: Retrieve deployment node public key
  shell: cat /root/.ssh/id_rsa.pub
  register: pub_key

- name: Add deployment node SSH key to node authorized users
  authorized_key:
    user: root
    key: "{{ pub_key.stdout }}"

- name: Disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no
  when: ansible_distribution == 'RedHat'

- name: Create directories for hanlon
  file:
    path: "{{ item }}"
    state: directory
    setype: svirt_sandbox_file_t
    recurse: true
  with_items:
    - /opt/hanlon
    - /opt/hanlon/image
    - /opt/deploy

- name: Set the correct timezone
  file:
    src: /usr/share/zoneinfo/{{ ntp_timezone }}
    dest: /etc/localtime
    state: link
    force: yes

- name: Configure NTP
  lineinfile:
    backup: yes
    dest: /etc/ntp.conf
    line: "restrict default limited kod nomodify notrap nopeer noquery"
    state: present

- name: Copy the iptables config file
  copy:
    src: iptables
    dest: /etc/sysconfig/iptables

- name: Start & enable iptables, ntpd & docker
  service:
    name: "{{ item }}"
    enabled: yes
    state: restarted
  with_items:
    - iptables
    - ntpd
    - docker

- name: Clone the project repos from Git
  git:
    repo: "{{ item.repo }}"
    dest: "{{ projects_base_path }}/{{ item.name }}"
  with_items: "{{ git_repos }}"
  ignore_errors: true

- name: Checkout the latest tagged version
  shell: "git checkout $(git describe --abbrev=0 --tags)"
  args:
    chdir: "{{ projects_base_path }}/{{ item.name }}"
  with_items: "{{ git_repos }}"

- name: Update default Ansible configuration
  lineinfile:
    dest: /etc/ansible/ansible.cfg
    regexp: "(^#|^){{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: 'inventory', line: 'inventory = {{ projects_base_path }}/inventory/hosts.ini' }
    - { regexp: 'forks', line: 'forks = 20' }
    - { regexp: 'host_key_checking', line: 'host_key_checking = False' }
    - { regexp: 'log_path', line: 'log_path = ./ansible.log' }
    - { regexp: 'ssh_args', line: 'ssh_args = -o ControlMaster=auto -o ControlPersist=60s' }
    - { regexp: 'pipelining', line: 'pipelining = True' }
